#!/usr/bin/env sh

echo "🔍 Running pre-commit checks..."

# Run lint-staged for file-level checks
bunx lint-staged || { echo "❌ lint-staged failed"; exit 1; }

# Detect what's being committed
STAGED_FILES=$(git diff --cached --name-only)
FRONTEND_STAGED="false"
BACKEND_STAGED="false"

if echo "$STAGED_FILES" | grep "^orchestratai_client/" >/dev/null 2>&1; then
  FRONTEND_STAGED="true"
fi

if echo "$STAGED_FILES" | grep "^orchestratai_api/" >/dev/null 2>&1; then
  BACKEND_STAGED="true"
fi

# Frontend checks (only if frontend files staged AND directory exists)
if [ "$FRONTEND_STAGED" = "true" ] && [ -d "orchestratai_client" ]; then
  echo "🧹 Linting frontend..."
  (cd orchestratai_client && bun run lint) || { echo "❌ Frontend lint failed"; exit 1; }

  echo "📝 Type checking frontend..."
  (cd orchestratai_client && bun run typecheck) || { echo "❌ Frontend type check failed"; exit 1; }
elif [ "$FRONTEND_STAGED" = "true" ]; then
  echo "⚠️ Frontend files staged but orchestratai_client directory not found (worktree?)."
  echo "   Skipping frontend checks - ensure they pass in main repo."
fi

# Backend checks (only if backend files staged AND directory exists)
if [ "$BACKEND_STAGED" = "true" ] && [ -d "orchestratai_api" ]; then
  echo "🧹 Linting backend..."
  uv run --project orchestratai_api ruff check orchestratai_api/src/ orchestratai_api/tests/ || { echo "❌ Backend lint failed"; exit 1; }

  echo "🐍 Type checking backend..."
  PYTHONPATH=./orchestratai_api uv run --project orchestratai_api mypy orchestratai_api/src/ || { echo "❌ Backend type check failed"; exit 1; }
elif [ "$BACKEND_STAGED" = "true" ]; then
  echo "⚠️ Backend files staged but orchestratai_api directory not found (worktree?)."
  echo "   Skipping backend checks - ensure they pass in main repo."
fi

echo "✅ Pre-commit checks passed!"
